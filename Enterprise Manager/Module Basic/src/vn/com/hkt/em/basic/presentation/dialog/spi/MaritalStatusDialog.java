/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MaritalStatusInformation.java
 *
 * Created on Apr 2, 2012, 8:40:52 PM
 */
package vn.com.hkt.em.basic.presentation.dialog.spi;

import java.awt.Color;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import org.openide.util.lookup.ServiceProvider;
import vn.com.hkt.em.basic.data.entities.MaritalStatus;
import vn.com.hkt.em.basic.presentation.dialog.api.IMaritalStatusDialog;

/**
 *
 * @author BinLe
 */
@ServiceProvider(service = IMaritalStatusDialog.class)
public class MaritalStatusDialog extends javax.swing.JDialog implements IMaritalStatusDialog {

    private JComboBox comboBox;
  //  private MaritalStatusDialogProvider provider = new MaritalStatusDialogProvider();
    private final long LEVEL = 1;

    /** Creates new form MaritalStatusInformation */
    public MaritalStatusDialog() {
        initComponents();
        this.setModal(true);
        this.setLocationRelativeTo(null);
        resetData();
        loadTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbMaritalStatusName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        txtMaritalStatusName = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMaritalStatus = new javax.swing.JTable();
        lbMessenger = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(MaritalStatusDialog.class, "MaritalStatusDialog.title")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lbMaritalStatusName.setText(org.openide.util.NbBundle.getMessage(MaritalStatusDialog.class, "MaritalStatusDialog.lbMaritalStatusName.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(MaritalStatusDialog.class, "MaritalStatusDialog.jLabel2.text")); // NOI18N

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        txtMaritalStatusName.setText(org.openide.util.NbBundle.getMessage(MaritalStatusDialog.class, "MaritalStatusDialog.txtMaritalStatusName.text")); // NOI18N
        txtMaritalStatusName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtMaritalStatusNameCaretUpdate(evt);
            }
        });

        btnReset.setText(org.openide.util.NbBundle.getMessage(MaritalStatusDialog.class, "MaritalStatusDialog.btnReset.text")); // NOI18N
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnAdd.setText(org.openide.util.NbBundle.getMessage(MaritalStatusDialog.class, "MaritalStatusDialog.btnAdd.text")); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText(org.openide.util.NbBundle.getMessage(MaritalStatusDialog.class, "MaritalStatusDialog.btnEdit.text")); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnRemove.setText(org.openide.util.NbBundle.getMessage(MaritalStatusDialog.class, "MaritalStatusDialog.btnRemove.text")); // NOI18N
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        tableMaritalStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableMaritalStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMaritalStatusMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableMaritalStatus);

        lbMessenger.setForeground(new java.awt.Color(255, 0, 0));
        lbMessenger.setText(org.openide.util.NbBundle.getMessage(MaritalStatusDialog.class, "MaritalStatusDialog.lbMessenger.text")); // NOI18N

        btnRefresh.setText(org.openide.util.NbBundle.getMessage(MaritalStatusDialog.class, "MaritalStatusDialog.btnRefresh.text")); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbMaritalStatusName)
                        .addGap(18, 18, 18)
                        .addComponent(txtMaritalStatusName, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnReset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdd)
                                .addGap(6, 6, 6)
                                .addComponent(btnRefresh)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRemove))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lbMessenger, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, lbMaritalStatusName});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaritalStatusName)
                    .addComponent(txtMaritalStatusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnRemove)
                    .addComponent(btnRefresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbMessenger)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        resetData();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        addData(0);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        editData();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        removeData();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void tableMaritalStatusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMaritalStatusMouseClicked
    //    provider.setDataView(provider.getListMaritalStatus().get(tableMaritalStatus.getSelectedRow()));
        refreshData();
    }//GEN-LAST:event_tableMaritalStatusMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (comboBox != null) {
        //    List<MaritalStatus> lms = provider.getListMaritalStatus();
           // lms.add(0, null);
          //  comboBox.setModel(new DefaultComboBoxModel(lms.toArray()));
        }
    }//GEN-LAST:event_formWindowClosing

    private void txtMaritalStatusNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtMaritalStatusNameCaretUpdate
        if (txtMaritalStatusName.getText().isEmpty()) {
            lbMaritalStatusName.setForeground(Color.red);
        } else {
            lbMaritalStatusName.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtMaritalStatusNameCaretUpdate

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
       // provider.refreshData();
        refreshData();
    }//GEN-LAST:event_btnRefreshActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbMaritalStatusName;
    private javax.swing.JLabel lbMessenger;
    private javax.swing.JTable tableMaritalStatus;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtMaritalStatusName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void resetData() {
        txtDescription.setText("");
        txtMaritalStatusName.setText("");
        btnAdd.setEnabled(true);
        btnEdit.setEnabled(false);
        btnRemove.setEnabled(false);
        lbMessenger.setVisible(false);
        btnRefresh.setEnabled(false);
    //    provider.setDataView(new MaritalStatus());
    }

    @Override
    public long addData(long idParent) {
//        getData();
//        if (provider.addData(idParent) < 0) {
//            lbMessenger.setVisible(true);
//            lbMessenger.setText("Hãy xem lại các phần bị bôi đỏ");
//            return ID_FAILD;
//        } else {
//            lbMessenger.setVisible(false);
//            resetData();
//            loadTable();
//            return provider.getDataViewCurrent().getId();
//        }
        return idParent;
    }

    @Override
    public long editData() {
//        getData();
//        if (provider.editData() < 0) {
//            lbMessenger.setVisible(true);
//            lbMessenger.setText("Hãy xem lại các phần bị bôi đỏ");
//            return ID_FAILD;
//        } else {
//            lbMessenger.setVisible(false);
//            resetData();
//            loadTable();
//            return provider.getDataViewCurrent().getId();
//        }
        return editData();
    }

    @Override
    public long removeData() {
//        long id = provider.getDataViewCurrent().getId();
//        if (provider.removeData() < 0) {
//            lbMessenger.setText("Hãy chắc chắn là bạn đã chọn 1 tình trạng hôn nhân để xóa");
//            lbMessenger.setVisible(true);
//            return ID_FAILD;
//        } else {
//            lbMessenger.setVisible(false);
//            resetData();
//            loadTable();
//            return id;
//        }
        return removeData();
    }

    @Override
    public void refreshData() {
//        txtDescription.setText(provider.getDataViewCurrent().getDescription());
//        txtMaritalStatusName.setText(provider.getDataViewCurrent().getMaritalStatusName());
        canEditData();
    }

    @Override
    public void canEditData() {
        btnAdd.setEnabled(false);
        btnRefresh.setEnabled(true);
        btnEdit.setEnabled(true);
        btnRemove.setEnabled(true);
    }

    private void getData() {
//        provider.getDataViewCurrent().setMaritalStatusName(txtMaritalStatusName.getText());
//        provider.getDataViewCurrent().setDescription(txtDescription.getText());
    }

    private void loadTable() {
//        provider.loadAllMaritalStatus();
//        tableMaritalStatus.setModel(new MaritalStatusTableModel(provider.getListMaritalStatus()));
    }

    @Override
    public int getFunction() {
        return ID_FAILD;
    }

    @Override
    public void setComboBox(JComboBox comboBox) {
        this.comboBox = comboBox;
    }

    @Override
    public String getDescriptionPanel() {
        return "Giao diện chỉnh sửa tình trạng hôn nhân";
    }

    @Override
    public boolean checkData() {
        return true;
    }

    @Override
    public void loadDefault() {
        
    }
}
